@model Shop.Models.Kindergartens.KindergartensPagedViewModel

<div class="container">
    <div class="row d-flex align-items-center justify-content-between">
        <div class="col-sm-6">
            <h1 class="text-white mt-4 mb-3">Kindergartens</h1>
        </div>
        <div class="col-sm-3">
            <form asp-action="Index" method="get" class="mb-3">
                <div class="form-group">
                    <label for="sortOrder" class="sr-only text-white">Sort By:</label>
                    @Html.DropDownList("sortOrder", new SelectList(new[]
                             {
                    new { Value = "", Text = "Created At (Descending)" },
                    new { Value = "created_at", Text = "Created At (Ascending)" },
                    new { Value = "name", Text = "Kindergarten Name (Ascending)" },
                    new { Value = "name_desc", Text = "Kindergarten Name (Descending)" },
                    new { Value = "group", Text = "Group Name (Ascending)" },
                    new { Value = "group_desc", Text = "Group Name (Descending)" },
                    new { Value = "children", Text = "Children Count (Ascending)" },
                    new { Value = "children_desc", Text = "Children Count (Descending)" },
                    new { Value = "teacher", Text = "Teacher (Ascending)" },
                    new { Value = "teacher_desc", Text = "Teacher (Descending)" }
                    }, "Value", "Text", Model.SortOrder), new { @class = "form-control", onchange = "this.form.submit()" })
                </div>
            </form>
        </div>
    </div>
    <form method="post">
        <table class="table text-white table-hover" style="table-layout: fixed; width: 100%;">
            <thead class="text-white">
                <tr>
                    <th class="col-1" scope="col">Nr</th>
                    <th class="col-3" scope="col">Kindergarten Name</th>
                    <th class="col-2" scope="col">Group Name</th>
                    <th class="col-3" scope="col">Teacher</th>
                    <th class="col-2" scope="col">Children Count</th>
                    <th class="col-3" scope="col"></th>
                </tr>
            </thead>
            <tbody class="text-white">
                @for (int i = 0; i < Model.Kindergartens.Count(); i++)
                {
                    var kindergarten = Model.Kindergartens.ElementAt(i);
                    <tr>
                        <td>@((Model.CurrentPage - 1) * Model.PageSize + (i + 1))</td>
                        <td>@kindergarten.KindergartenName</td>
                        <td>@kindergarten.GroupName</td>
                        <td>@kindergarten.Teacher</td>
                        <td>@kindergarten.ChildrenCount</td>
                        <td>
                            <a asp-action="Details" asp-route-id="@kindergarten.Id" class="btn btn-info">Details</a>
                            <a asp-action="Update" asp-route-id="@kindergarten.Id" class="btn btn-primary">Update</a>
                            <a asp-action="Delete" asp-route-id="@kindergarten.Id" class="btn btn-outline-danger">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </form>

    <div class="pagination">
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <a asp-action="Index" asp-route-pageNumber="@i" asp-route-sortOrder="@Model.SortOrder" class="btn @((i == Model.CurrentPage) ? "btn-primary" : "btn-secondary") mx-1">
                @i
            </a>
        }
    </div>
</div>
